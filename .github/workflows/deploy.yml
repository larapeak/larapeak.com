name: Deploy

on:
  push:
    branches:
      - master
    
jobs:     
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      repository: 'larapeak/larapeak.com'
      baseDir: 'github/larapeak'
      newReleaseName: '${{ github.run_id }}'
    
    steps:
      - name: üåç Set environment variables
        run: |
            echo "releasesDir=${{ env.baseDir }}/releases" >> $GITHUB_ENV
    
      - name: üåç Set environment variables (part 2)
        run: |
            echo "releasesDir=${{ env.baseDir }}/releases" >> $GITHUB_ENV
            echo "persistentDir=${{ env.baseDir }}/persistent" >> $GITHUB_ENV
            echo "currentDir=${{ env.baseDir }}/current" >> $GITHUB_ENV
            echo "newReleaseDir=${{ env.releasesDir }}/${{ env.newReleaseName }}" >> $GITHUB_ENV
      
      - name: üåÄ Clone repository
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ${{ env.releasesDir }}

            # Create new directory
            mkdir ${{ env.newReleaseName }}

            # Clone directory
            git clone --depth 1 https://github.com/${{ env.repository }}.git ${{ env.newReleaseName }}

            # Configure sparse checkout
            cd ${{ env.newReleaseName }}
            git config code.sparsecheckout true
            echo "*" > .git/info/sparse-checkout
            echo "!storage" >> .git/info/sparse-checkout
            echo "!public/build" >> .git/info/sparse-checkout
            git read-tree -mu HEAD
            
      - name: üéª Run composer
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ${{ env.newReleaseDir }}
            composer install --prefer-dist --no-scripts --no-dev -q -o
            
      - name: üåÖ Generate assets
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ${{ env.newReleaseDir }}
            npm install
            npm run prod
            php artisan clear-compiled

      - name: üîó Update symlinks
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
              # Remove the storage directory and replace with persistent data
              rm -rf ${{ env.newReleaseDir }}/storage
              cd ${{ env.newReleaseDir }};
              ln -nfs ${{ env.baseDir }}/persistent/storage storage;

              # Remove the public/uploads directory and replace with persistent data
              rm -rf ${{ env.newReleaseDir }}/public/uploads
              ln -nfs ${{ env.baseDir }}/persistent/uploads public/uploads
              
              # Import the environment config
              ln -nfs ${{ env.baseDir }}/.env .env
            
      - name: üôà Migrate database
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ${{ env.newReleaseDir }}
            php artisan migrate --force
            
      - name: üôè Bless release
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ${{ env.newReleaseDir }}
            ln -nfs ${{ env.newReleaseDir }} /${{ env.currentDir }};
            php artisan config:clear
            php artisan config:cache
            php artisan route:clear
            php artisan route:cache
            php artisan view:clear
            php artisan view:cache
